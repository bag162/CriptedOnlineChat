{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\DELL\\\\source\\\\repos\\\\CriptedOnlineChat\\\\CriptedOnlineChat\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(httpClient, baseUrl) {\n    this.httpClient = httpClient;\n    this.baseUrl = baseUrl;\n  }\n\n  LoginUser(userToLogin) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this.httpClient.post(_this.baseUrl + \"user/Login\", userToLogin).toPromise().then(response => {\n        return response;\n      });\n    })();\n  }\n\n  RegisterUser(registerUserDTO) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2.httpClient.post(_this2.baseUrl + \"user/registration\", registerUserDTO).toPromise();\n      return \"true\";\n    })();\n  }\n\n}\n\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\n\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});\nexport class LoginUserDTO {\n  constructor() {\n    this.login = \"\";\n    this.password = \"\";\n    this.isPersistent = false;\n  }\n\n}\n\nLoginUserDTO.ɵfac = function LoginUserDTO_Factory(t) {\n  return new (t || LoginUserDTO)();\n};\n\nLoginUserDTO.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginUserDTO,\n  factory: LoginUserDTO.ɵfac,\n  providedIn: 'root'\n});\nexport class RegisterUserDTO {\n  constructor() {\n    this.login = \"\";\n    this.password = \"\";\n    this.repeatPassword = \"\";\n    this.isPersistent = false;\n  }\n\n}\n\nRegisterUserDTO.ɵfac = function RegisterUserDTO_Factory(t) {\n  return new (t || RegisterUserDTO)();\n};\n\nRegisterUserDTO.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RegisterUserDTO,\n  factory: RegisterUserDTO.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/DELL/source/repos/CriptedOnlineChat/CriptedOnlineChat/ClientApp/src/app/Services/user.service.ts"],"names":["i0","i1","UserService","constructor","httpClient","baseUrl","LoginUser","userToLogin","post","toPromise","then","response","RegisterUser","registerUserDTO","ɵfac","UserService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","LoginUserDTO","login","password","isPersistent","LoginUserDTO_Factory","RegisterUserDTO","repeatPassword","RegisterUserDTO_Factory"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,CAACC,UAAD,EAAaC,OAAb,EAAsB;AAC7B,SAAKD,UAAL,GAAkBA,UAAlB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACH;;AACKC,EAAAA,SAAS,CAACC,WAAD,EAAc;AAAA;;AAAA;AACzB,mBAAa,KAAI,CAACH,UAAL,CAAgBI,IAAhB,CAAqB,KAAI,CAACH,OAAL,GAAe,YAApC,EAAkDE,WAAlD,EAA+DE,SAA/D,GAA2EC,IAA3E,CAAgFC,QAAQ,IAAI;AACrG,eAAOA,QAAP;AACH,OAFY,CAAb;AADyB;AAI5B;;AACKC,EAAAA,YAAY,CAACC,eAAD,EAAkB;AAAA;;AAAA;AAChC,YAAM,MAAI,CAACT,UAAL,CAAgBI,IAAhB,CAAqB,MAAI,CAACH,OAAL,GAAe,mBAApC,EAAyDQ,eAAzD,EAA0EJ,SAA1E,EAAN;AACA,aAAO,MAAP;AAFgC;AAGnC;;AAboB;;AAezBP,WAAW,CAACY,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAId,WAAV,EAAuBF,EAAE,CAACiB,QAAH,CAAYhB,EAAE,CAACiB,UAAf,CAAvB,EAAmDlB,EAAE,CAACiB,QAAH,CAAY,UAAZ,CAAnD,CAAP;AAAqF,CAA1I;;AACAf,WAAW,CAACiB,KAAZ,GAAoB,aAAcnB,EAAE,CAACoB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEnB,WAAT;AAAsBoB,EAAAA,OAAO,EAAEpB,WAAW,CAACY,IAA3C;AAAiDS,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC;AACA,OAAO,MAAMC,YAAN,CAAmB;AACtBrB,EAAAA,WAAW,GAAG;AACV,SAAKsB,KAAL,GAAa,EAAb;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACH;;AALqB;;AAO1BH,YAAY,CAACV,IAAb,GAAoB,SAASc,oBAAT,CAA8BZ,CAA9B,EAAiC;AAAE,SAAO,KAAKA,CAAC,IAAIQ,YAAV,GAAP;AAAmC,CAA1F;;AACAA,YAAY,CAACL,KAAb,GAAqB,aAAcnB,EAAE,CAACoB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEG,YAAT;AAAuBF,EAAAA,OAAO,EAAEE,YAAY,CAACV,IAA7C;AAAmDS,EAAAA,UAAU,EAAE;AAA/D,CAAtB,CAAnC;AACA,OAAO,MAAMM,eAAN,CAAsB;AACzB1B,EAAAA,WAAW,GAAG;AACV,SAAKsB,KAAL,GAAa,EAAb;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKI,cAAL,GAAsB,EAAtB;AACA,SAAKH,YAAL,GAAoB,KAApB;AACH;;AANwB;;AAQ7BE,eAAe,CAACf,IAAhB,GAAuB,SAASiB,uBAAT,CAAiCf,CAAjC,EAAoC;AAAE,SAAO,KAAKA,CAAC,IAAIa,eAAV,GAAP;AAAsC,CAAnG;;AACAA,eAAe,CAACV,KAAhB,GAAwB,aAAcnB,EAAE,CAACoB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEQ,eAAT;AAA0BP,EAAAA,OAAO,EAAEO,eAAe,CAACf,IAAnD;AAAyDS,EAAAA,UAAU,EAAE;AAArE,CAAtB,CAAtC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class UserService {\r\n    constructor(httpClient, baseUrl) {\r\n        this.httpClient = httpClient;\r\n        this.baseUrl = baseUrl;\r\n    }\r\n    async LoginUser(userToLogin) {\r\n        return await this.httpClient.post(this.baseUrl + \"user/Login\", userToLogin).toPromise().then(response => {\r\n            return response;\r\n        });\r\n    }\r\n    async RegisterUser(registerUserDTO) {\r\n        await this.httpClient.post(this.baseUrl + \"user/registration\", registerUserDTO).toPromise();\r\n        return \"true\";\r\n    }\r\n}\r\nUserService.ɵfac = function UserService_Factory(t) { return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL')); };\r\nUserService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: UserService, factory: UserService.ɵfac, providedIn: 'root' });\r\nexport class LoginUserDTO {\r\n    constructor() {\r\n        this.login = \"\";\r\n        this.password = \"\";\r\n        this.isPersistent = false;\r\n    }\r\n}\r\nLoginUserDTO.ɵfac = function LoginUserDTO_Factory(t) { return new (t || LoginUserDTO)(); };\r\nLoginUserDTO.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: LoginUserDTO, factory: LoginUserDTO.ɵfac, providedIn: 'root' });\r\nexport class RegisterUserDTO {\r\n    constructor() {\r\n        this.login = \"\";\r\n        this.password = \"\";\r\n        this.repeatPassword = \"\";\r\n        this.isPersistent = false;\r\n    }\r\n}\r\nRegisterUserDTO.ɵfac = function RegisterUserDTO_Factory(t) { return new (t || RegisterUserDTO)(); };\r\nRegisterUserDTO.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: RegisterUserDTO, factory: RegisterUserDTO.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}