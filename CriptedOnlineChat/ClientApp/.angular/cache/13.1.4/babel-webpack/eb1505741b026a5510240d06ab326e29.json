{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\DELL\\\\source\\\\repos\\\\CriptedOnlineChat\\\\CriptedOnlineChat\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate, __param } from \"tslib\";\nimport { Inject, Injectable } from \"@angular/core\";\nInjectable({\n  providedIn: 'root'\n});\nlet AuthorizeGuardService = class AuthorizeGuardService {\n  constructor(httpclient, baseUrl) {\n    this.httpClient = httpclient;\n    this.baseUrl = baseUrl + \"user/IsAuthenticated\";\n  }\n\n  IsAuthorized() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let result;\n      yield _this.httpClient.get(_this.baseUrl).then(response => result = response);\n\n      if (result.content == \"true\") {}\n\n      return returnedResult; //TODO сделать запрос на сервер авторизован ли пользователь по кукам\n    })();\n  }\n\n};\nAuthorizeGuardService = __decorate([__param(1, Inject('BASE_URL'))], AuthorizeGuardService);\nexport { AuthorizeGuardService };","map":{"version":3,"sources":["C:/Users/DELL/source/repos/CriptedOnlineChat/CriptedOnlineChat/ClientApp/src/app/Services/authorizeGuard.service.ts"],"names":["__decorate","__param","Inject","Injectable","providedIn","AuthorizeGuardService","constructor","httpclient","baseUrl","httpClient","IsAuthorized","result","get","then","response","content","returnedResult"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,eAAnC;AACAA,UAAU,CAAC;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAAD,CAAV;AACA,IAAIC,qBAAqB,GAAG,MAAMA,qBAAN,CAA4B;AACpDC,EAAAA,WAAW,CAACC,UAAD,EAAaC,OAAb,EAAsB;AAC7B,SAAKC,UAAL,GAAkBF,UAAlB;AACA,SAAKC,OAAL,GAAeA,OAAO,GAAG,sBAAzB;AACH;;AACKE,EAAAA,YAAY,GAAG;AAAA;;AAAA;AACjB,UAAIC,MAAJ;AACA,YAAM,KAAI,CAACF,UAAL,CAAgBG,GAAhB,CAAoB,KAAI,CAACJ,OAAzB,EAAkCK,IAAlC,CAAuCC,QAAQ,IAAIH,MAAM,GAAGG,QAA5D,CAAN;;AACA,UAAIH,MAAM,CAACI,OAAP,IAAkB,MAAtB,EAA8B,CAC7B;;AACD,aAAOC,cAAP,CALiB,CAKM;AALN;AAMpB;;AAXmD,CAAxD;AAaAX,qBAAqB,GAAGL,UAAU,CAAC,CAC/BC,OAAO,CAAC,CAAD,EAAIC,MAAM,CAAC,UAAD,CAAV,CADwB,CAAD,EAE/BG,qBAF+B,CAAlC;AAGA,SAASA,qBAAT","sourcesContent":["import { __decorate, __param } from \"tslib\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nInjectable({ providedIn: 'root' });\r\nlet AuthorizeGuardService = class AuthorizeGuardService {\r\n    constructor(httpclient, baseUrl) {\r\n        this.httpClient = httpclient;\r\n        this.baseUrl = baseUrl + \"user/IsAuthenticated\";\r\n    }\r\n    async IsAuthorized() {\r\n        let result;\r\n        await this.httpClient.get(this.baseUrl).then(response => result = response);\r\n        if (result.content == \"true\") {\r\n        }\r\n        return returnedResult; //TODO сделать запрос на сервер авторизован ли пользователь по кукам\r\n    }\r\n};\r\nAuthorizeGuardService = __decorate([\r\n    __param(1, Inject('BASE_URL'))\r\n], AuthorizeGuardService);\r\nexport { AuthorizeGuardService };\r\n"]},"metadata":{},"sourceType":"module"}