{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\DELL\\\\source\\\\repos\\\\CriptedOnlineChat\\\\CriptedOnlineChat\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { db } from 'src/db';\nimport { RSAService } from 'src/app/rsa';\nimport { inject } from '@angular/core/testing';\nlet RegisterUserComponent = class RegisterUserComponent {\n  constructor(http, baseUrl, rsaService) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.rsaService = rsaService;\n    this.currentUser = {\n      Login: \"\"\n    };\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var user = yield db.User.toArray();\n\n      if (user.length != 0) {\n        console.log(\"Пользователь зарегестрирован\");\n        _this.currentUser = user[0];\n        $(\"#inputLogin\").prop(\"disabled\", true);\n        $(\"#sendButton\").hide();\n      }\n    })();\n  }\n\n  RegisterUser() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this2.currentUser.Login == \"\") {\n        // add notify\n        return;\n      }\n\n      yield _this2.http.post(_this2.baseUrl + \"user\", _this2.currentUser).subscribe(result => _this2.DisplayNotify(result));\n      return;\n    })();\n  }\n\n  DisplayNotify(resultRequest) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (resultRequest == \"true\") {\n        yield db.User.add(yield _this3.currentUser, 0);\n        console.log(resultRequest + \"true\");\n        $(\"#inputLogin\").prop(\"disabled\", true);\n        $(\"#sendButton\").hide();\n        $(\"#succesNotify\").show(500);\n        setTimeout(() => {\n          $(\"#succesNotify\").hide(500);\n        }, 2500);\n      } else {\n        console.log(resultRequest + \"false\");\n        $(\"#dangerNotify\").show(500);\n        setTimeout(() => {\n          $(\"#dangerNotify\").hide(500);\n        }, 2500);\n      }\n    })();\n  }\n\n};\nRegisterUserComponent = __decorate([Component({\n  selector: 'register-user-component',\n  templateUrl: 'registerUserComponent.html',\n  providers: [RSAService]\n}), inject(), __param(1, Inject('BASE_URL'))], RegisterUserComponent);\nexport { RegisterUserComponent };","map":{"version":3,"sources":["C:/Users/DELL/source/repos/CriptedOnlineChat/CriptedOnlineChat/ClientApp/src/app/ContactListComponent/RegisterUserComponent/registerUserComponent.ts"],"names":["__decorate","__param","Component","Inject","db","RSAService","inject","RegisterUserComponent","constructor","http","baseUrl","rsaService","currentUser","Login","ngOnInit","user","User","toArray","length","console","log","$","prop","hide","RegisterUser","post","subscribe","result","DisplayNotify","resultRequest","add","show","setTimeout","selector","templateUrl","providers"],"mappings":"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","sourcesContent":["import { __decorate, __param } from \"tslib\";\r\nimport { Component, Inject } from '@angular/core';\r\nimport { db } from 'src/db';\r\nimport { RSAService } from 'src/app/rsa';\r\nimport { inject } from '@angular/core/testing';\r\nlet RegisterUserComponent = class RegisterUserComponent {\r\n    constructor(http, baseUrl, rsaService) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl;\r\n        this.rsaService = rsaService;\r\n        this.currentUser = { Login: \"\" };\r\n    }\r\n    async ngOnInit() {\r\n        var user = await db.User.toArray();\r\n        if (user.length != 0) {\r\n            console.log(\"Пользователь зарегестрирован\");\r\n            this.currentUser = user[0];\r\n            $(\"#inputLogin\").prop(\"disabled\", true);\r\n            $(\"#sendButton\").hide();\r\n        }\r\n    }\r\n    async RegisterUser() {\r\n        if (this.currentUser.Login == \"\") {\r\n            // add notify\r\n            return;\r\n        }\r\n        await this.http.post(this.baseUrl + \"user\", this.currentUser).subscribe(result => this.DisplayNotify(result));\r\n        return;\r\n    }\r\n    async DisplayNotify(resultRequest) {\r\n        if (resultRequest == \"true\") {\r\n            await db.User.add(await this.currentUser, 0);\r\n            console.log(resultRequest + \"true\");\r\n            $(\"#inputLogin\").prop(\"disabled\", true);\r\n            $(\"#sendButton\").hide();\r\n            $(\"#succesNotify\").show(500);\r\n            setTimeout(() => {\r\n                $(\"#succesNotify\").hide(500);\r\n            }, 2500);\r\n        }\r\n        else {\r\n            console.log(resultRequest + \"false\");\r\n            $(\"#dangerNotify\").show(500);\r\n            setTimeout(() => {\r\n                $(\"#dangerNotify\").hide(500);\r\n            }, 2500);\r\n        }\r\n    }\r\n};\r\nRegisterUserComponent = __decorate([\r\n    Component({\r\n        selector: 'register-user-component',\r\n        templateUrl: 'registerUserComponent.html',\r\n        providers: [RSAService]\r\n    }),\r\n    inject(),\r\n    __param(1, Inject('BASE_URL'))\r\n], RegisterUserComponent);\r\nexport { RegisterUserComponent };\r\n"]},"metadata":{},"sourceType":"module"}