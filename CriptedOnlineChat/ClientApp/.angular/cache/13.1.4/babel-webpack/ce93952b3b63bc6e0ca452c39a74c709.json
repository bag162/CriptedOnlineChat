{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\DELL\\\\source\\\\repos\\\\CriptedOnlineChat\\\\CriptedOnlineChat\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/db\";\nimport * as i2 from \"./rsa.service\";\nexport let MessageService = /*#__PURE__*/(() => {\n  class MessageService {\n    constructor(AppDB, rsaService) {\n      this.AppDB = AppDB;\n      this.rsaService = rsaService;\n    }\n\n    SendMessage(rsaService) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.rsaService = rsaService;\n      })();\n    }\n\n    AddNewMessages(addedmessages) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        addedmessages.forEach( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (element) {\n            let recipientLogin = (yield _this2.AppDB.Contacts.filter(x => x.ContactId == element.senderId).first()).Login;\n            let recipientPrivateKeyId = (yield _this2.AppDB.Contacts.filter(x => x.ContactId == element.senderId).first()).PrivateKeyId;\n            let privateKeyForDecript = yield _this2.AppDB.PrivateKey.filter(x => x.id == recipientPrivateKeyId).first();\n            let decriptedMessage = yield _this2.rsaService.DecriptMessage(element.data, privateKeyForDecript);\n            let newMessage = {\n              Data: decriptedMessage,\n              RecipientLogin: recipientLogin,\n              IsSender: false\n            };\n            yield _this2.AppDB.Messages.add(newMessage);\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      })();\n    }\n\n  }\n\n  MessageService.ɵfac = function MessageService_Factory(t) {\n    return new (t || MessageService)(i0.ɵɵinject(i1.AppDB), i0.ɵɵinject(i2.RSAService));\n  };\n\n  MessageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MessageService,\n    factory: MessageService.ɵfac,\n    providedIn: 'root'\n  });\n  return MessageService;\n})();\nexport class SendMessageDTO {}","map":null,"metadata":{},"sourceType":"module"}