{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\DELL\\\\source\\\\repos\\\\CriptedOnlineChat\\\\CriptedOnlineChat\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as forge from 'node-forge';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/db\";\nimport * as i2 from \"../../Services/data.service\";\nimport * as i3 from \"../../Services/websocket.service\";\nimport * as i4 from \"src/app/Services/rsa.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\n\nfunction MessageListComponent_ng_template_6_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(message_r1.RecipientLogin);\n  }\n}\n\nfunction MessageListComponent_ng_template_6_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.user.Login);\n  }\n}\n\nfunction MessageListComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 10);\n    i0.ɵɵelementStart(1, \"div\", 11);\n    i0.ɵɵelement(2, \"img\", 12);\n    i0.ɵɵtemplate(3, MessageListComponent_ng_template_6_div_3_Template, 2, 1, \"div\", 13);\n    i0.ɵɵtemplate(4, MessageListComponent_ng_template_6_div_4_Template, 2, 1, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 14);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !message_r1.IsSender);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r1.IsSender);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", message_r1.Data, \" \");\n  }\n}\n\nexport let MessageListComponent = /*#__PURE__*/(() => {\n  class MessageListComponent {\n    constructor(db, dataService, webSocketService, rsaService) {\n      // variables to display\n      this.messageList = [];\n      this.user = {\n        Login: \"\"\n      };\n      this.isKeyExchangeCompleted = false; // variables to html\n\n      this.sendedMessage = \"\";\n      this.dispayedMessagesLogin = \"\";\n      this.DataService = dataService;\n      this.db = db;\n      this.WebSocketService = webSocketService;\n      this.rsaService = rsaService;\n    }\n\n    ngDoCheck() {\n      if (this.isKeyExchangeCompleted) {\n        $(\".messageClass\").hide();\n      } else {\n        $(\".messageClass\").show();\n      }\n    }\n\n    ngOnInit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        yield _this.DataService.currentDisplayedLogin.subscribe(currentDisplayedLogin => {\n          _this.DisplayMissages(currentDisplayedLogin);\n\n          _this.dispayedMessagesLogin = currentDisplayedLogin;\n          $('.recipientName').text(currentDisplayedLogin);\n        });\n        yield _this.db.User.toArray().then(x => _this.user = x[0]);\n        $(\".NoKeyMessage\").hide();\n        $(\".MessageClass\").hide();\n      })();\n    }\n\n    DisplayMissages(dispayedMessagesLogin) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        // Проверяем, есть ли у отображаемого контакта ключ для шифровки сообщения, если нет, то скрываем компонент отправки сообщения, и отображаем контейнер информирования\n        var displayedContact = yield _this2.db.Contacts.filter(x => x.Login == dispayedMessagesLogin).first();\n\n        if (displayedContact.PublicKeyForEncriptId == undefined) {\n          $(\".NoKeyMessage\").show();\n          $(\".MessageClass\").hide();\n        } else {\n          $(\".NoKeyMessage\").hide();\n          $(\".MessageClass\").show();\n        } // выгрузка сообщений из localdb и отображение их\n\n\n        _this2.messageList = [];\n        var messagesToDisplay = yield _this2.db.Messages.filter(x => x.RecipientLogin == dispayedMessagesLogin).toArray();\n        messagesToDisplay.forEach( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (element) {\n            let decriptedNewMessage = {\n              Data: element.Data,\n              IsSender: element.IsSender,\n              RecipientLogin: element.RecipientLogin\n            };\n\n            _this2.messageList.push(decriptedNewMessage);\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      })();\n    }\n\n    SendMessage() {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        if (_this3.sendedMessage == \"\") {\n          return;\n        }\n\n        let contactForSend = yield _this3.db.Contacts.filter(x => x.Login == _this3.dispayedMessagesLogin).first();\n        let key = yield _this3.db.PublicKeyForEncript.filter(x => x.id == contactForSend.PublicKeyForEncriptId).first();\n        var keyForEncript = forge.pki.rsa.setPublicKey(key.n, key.e);\n        let encriptedMessage = yield _this3.rsaService.EncriptMessage(_this3.sendedMessage, keyForEncript);\n        let message = {\n          data: encriptedMessage,\n          senderId: _this3.user.id,\n          recipientId: contactForSend.ContactId\n        };\n        yield _this3.WebSocketService.sendMessage(message);\n        let addedMessage = {\n          Data: _this3.sendedMessage,\n          RecipientLogin: contactForSend.Login,\n          IsSender: true\n        };\n        yield _this3.db.Messages.add(addedMessage);\n        _this3.messageList = [];\n        _this3.sendedMessage = \"\";\n        yield _this3.DisplayMissages(contactForSend.Login);\n      })();\n    }\n\n  }\n\n  MessageListComponent.ɵfac = function MessageListComponent_Factory(t) {\n    return new (t || MessageListComponent)(i0.ɵɵdirectiveInject(i1.AppDB), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.WebSocketService), i0.ɵɵdirectiveInject(i4.RSAService));\n  };\n\n  MessageListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MessageListComponent,\n    selectors: [[\"message-list-component\"]],\n    inputs: {\n      displayedUserLogin: \"displayedUserLogin\"\n    },\n    decls: 14,\n    vars: 2,\n    consts: [[1, \"selected-user\"], [1, \"recipientName\", \"name\"], [1, \"chat-container\"], [1, \"chat-box\", \"chatContainerScroll\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"MessageClass\", \"form-group\", \"mt-3\", \"mb-0\"], [\"id\", \"sendMessage\", \"rows\", \"3\", \"placeholder\", \"Type your message here...\", 1, \"col-md-3\", \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"col-md-2\", \"mt-2\", 3, \"click\"], [1, \"card\", \"NoKeyMessage\"], [1, \"card-body\"], [1, \"chat-left\"], [1, \"chat-avatar\"], [\"src\", \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTaNDp4YnUOqj50lXmzwcNmA6x6tk__ZJoq7Q&usqp=CAU\", \"alt\", \"Retail Admin\"], [\"class\", \"chat-name\", 4, \"ngIf\"], [1, \"chat-text\"], [1, \"chat-name\"]],\n    template: function MessageListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"span\");\n        i0.ɵɵtext(2, \"To: \");\n        i0.ɵɵelement(3, \"span\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵelementStart(5, \"ul\", 3);\n        i0.ɵɵtemplate(6, MessageListComponent_ng_template_6_Template, 7, 3, \"ng-template\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function MessageListComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.sendedMessage = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function MessageListComponent_Template_button_click_9_listener() {\n          return ctx.SendMessage();\n        });\n        i0.ɵɵtext(10, \"Send\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 8);\n        i0.ɵɵelementStart(12, \"div\", 9);\n        i0.ɵɵtext(13, \" The message could not be sent because the keys were not exchanged. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.messageList);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.sendedMessage);\n      }\n    },\n    directives: [i5.NgForOf, i5.NgIf, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgModel],\n    styles: [\"body[_ngcontent-%COMP%]{margin-top:20px}.chat-search-box[_ngcontent-%COMP%]{border-radius:3px 0 0;padding:.75rem 1rem}.chat-search-box[_ngcontent-%COMP%]   .input-group[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]{border-radius:2px 0 0 2px;border-right:0}.chat-search-box[_ngcontent-%COMP%]   .input-group[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]:focus{border-right:0}.chat-search-box[_ngcontent-%COMP%]   .input-group[_ngcontent-%COMP%]   .input-group-btn[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{border-radius:0 2px 2px 0;margin:0}.chat-search-box[_ngcontent-%COMP%]   .input-group[_ngcontent-%COMP%]   .input-group-btn[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:1.2rem;line-height:100%;vertical-align:middle}@media (max-width: 767px){.chat-search-box[_ngcontent-%COMP%]{display:none}}.users-container[_ngcontent-%COMP%]{position:relative;padding:1rem 0;border-right:1px solid #e6ecf3;height:100%;display:flex;flex-direction:column}.users[_ngcontent-%COMP%]{padding:0}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]{position:relative;width:100%;padding:10px 1rem;cursor:pointer;border-bottom:1px solid #f0f4f8}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]:hover{background-color:#fff;background-image:linear-gradient(right,#e9eff5,#ffffff)}.users[_ngcontent-%COMP%]   .person.active-user[_ngcontent-%COMP%]{background-color:#fff;background-image:linear-gradient(right,#f7f9fb,#ffffff)}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]:last-child{border-bottom:0}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   .user[_ngcontent-%COMP%]{display:inline-block;position:relative;margin-right:10px}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   .user[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:48px;height:48px;border-radius:50px}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   .user[_ngcontent-%COMP%]   .status[_ngcontent-%COMP%]{width:10px;height:10px;border-radius:100px;background:#e6ecf3;position:absolute;top:0;right:0}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   .user[_ngcontent-%COMP%]   .status.online[_ngcontent-%COMP%]{background:#9ec94a}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   .user[_ngcontent-%COMP%]   .status.offline[_ngcontent-%COMP%]{background:#c4d2e2}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   .user[_ngcontent-%COMP%]   .status.away[_ngcontent-%COMP%]{background:#f9be52}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   .user[_ngcontent-%COMP%]   .status.busy[_ngcontent-%COMP%]{background:#fd7274}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   p.name-time[_ngcontent-%COMP%]{font-weight:600;font-size:.85rem;display:inline-block}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   p.name-time[_ngcontent-%COMP%]   .time[_ngcontent-%COMP%]{font-weight:400;font-size:.7rem;text-align:right;color:#8796af}@media (max-width: 767px){.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   .user[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:30px;height:30px}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   p.name-time[_ngcontent-%COMP%], .users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   p.name-time[_ngcontent-%COMP%]   .time[_ngcontent-%COMP%]{display:none}}.selected-user[_ngcontent-%COMP%]{width:100%;padding:0 15px;min-height:64px;line-height:64px;border-bottom:1px solid #e6ecf3;border-radius:0 3px 0 0}.selected-user[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{line-height:100%}.selected-user[_ngcontent-%COMP%]   span.name[_ngcontent-%COMP%]{font-weight:700}.chat-container[_ngcontent-%COMP%]{position:relative;padding:1rem}.chat-container[_ngcontent-%COMP%]   li.chat-left[_ngcontent-%COMP%], .chat-container[_ngcontent-%COMP%]   li.chat-right[_ngcontent-%COMP%]{display:flex;flex:1;flex-direction:row;margin-bottom:40px}.chat-container[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:48px;height:48px;border-radius:30px}.chat-container[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   .chat-avatar[_ngcontent-%COMP%]{margin-right:20px}.chat-container[_ngcontent-%COMP%]   li.chat-right[_ngcontent-%COMP%]{justify-content:flex-end}.chat-container[_ngcontent-%COMP%]   li.chat-right[_ngcontent-%COMP%] > .chat-avatar[_ngcontent-%COMP%]{margin-left:20px;margin-right:0}.chat-container[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   .chat-name[_ngcontent-%COMP%]{font-size:.75rem;color:#999;text-align:center}.chat-container[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   .chat-text[_ngcontent-%COMP%]{padding:.4rem 1rem;border-radius:4px;background:#ffffff;font-weight:300;line-height:150%;position:relative}.chat-container[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   .chat-text[_ngcontent-%COMP%]:before{content:\\\"\\\";position:absolute;width:0;height:0;top:10px;left:-20px;border:10px solid;border-color:transparent #ffffff transparent transparent}.chat-container[_ngcontent-%COMP%]   li.chat-right[_ngcontent-%COMP%] > .chat-text[_ngcontent-%COMP%]{text-align:right}.chat-container[_ngcontent-%COMP%]   li.chat-right[_ngcontent-%COMP%] > .chat-text[_ngcontent-%COMP%]:before{right:-20px;border-color:transparent transparent transparent #ffffff;left:inherit}.chat-container[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   .chat-hour[_ngcontent-%COMP%]{padding:0;font-size:.75rem;display:flex;flex-direction:row;align-items:center;justify-content:center;margin:0 0 0 15px}.chat-container[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   .chat-hour[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{font-size:16px;color:#9ec94a}.chat-container[_ngcontent-%COMP%]   li.chat-right[_ngcontent-%COMP%] > .chat-hour[_ngcontent-%COMP%]{margin:0 15px 0 0}@media (max-width: 767px){.chat-container[_ngcontent-%COMP%]   li.chat-left[_ngcontent-%COMP%], .chat-container[_ngcontent-%COMP%]   li.chat-right[_ngcontent-%COMP%]{flex-direction:column;margin-bottom:30px}.chat-container[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:32px;height:32px}.chat-container[_ngcontent-%COMP%]   li.chat-left[_ngcontent-%COMP%]   .chat-avatar[_ngcontent-%COMP%]{margin:0 0 5px;display:flex;align-items:center}.chat-container[_ngcontent-%COMP%]   li.chat-left[_ngcontent-%COMP%]   .chat-hour[_ngcontent-%COMP%]{justify-content:flex-end}.chat-container[_ngcontent-%COMP%]   li.chat-left[_ngcontent-%COMP%]   .chat-name[_ngcontent-%COMP%]{margin-left:5px}.chat-container[_ngcontent-%COMP%]   li.chat-right[_ngcontent-%COMP%]   .chat-avatar[_ngcontent-%COMP%]{order:-1;margin:0 0 5px;align-items:center;display:flex;justify-content:right;flex-direction:row-reverse}.chat-container[_ngcontent-%COMP%]   li.chat-right[_ngcontent-%COMP%]   .chat-hour[_ngcontent-%COMP%]{justify-content:flex-start;order:2}.chat-container[_ngcontent-%COMP%]   li.chat-right[_ngcontent-%COMP%]   .chat-name[_ngcontent-%COMP%]{margin-right:5px}.chat-container[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   .chat-text[_ngcontent-%COMP%]{font-size:.8rem}}.chat-form[_ngcontent-%COMP%]{padding:15px;width:100%;left:0;right:0;bottom:0;background-color:#fff;border-top:1px solid white}ul[_ngcontent-%COMP%]{list-style-type:none;margin:0;padding:0}.card[_ngcontent-%COMP%]{border:0;background:#f4f5fb;border-radius:2px;margin-bottom:2rem;box-shadow:none}\"]\n  });\n  return MessageListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}