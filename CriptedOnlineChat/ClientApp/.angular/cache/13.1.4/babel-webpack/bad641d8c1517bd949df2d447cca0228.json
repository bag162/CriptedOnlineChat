{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\DELL\\\\source\\\\repos\\\\CriptedOnlineChat\\\\CriptedOnlineChat\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet RegisterUserComponent = class RegisterUserComponent {\n  constructor(registerUser, userService, router, appDb) {\n    this.registerUser = registerUser;\n    this.userService = userService;\n    this.router = router;\n    this.appDb = appDb;\n  }\n\n  registerNewUser() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.registerUser.password != _this.registerUser.repeatPassword) {\n        $('.invalidMessage').text(\"Password mismatch\");\n        $('.form-control').addClass('is-invalid');\n        return;\n      }\n\n      var result = yield _this.userService.RegisterUser(_this.registerUser);\n\n      if (result.isSuccess) {\n        let newUser = {\n          Login: result.login,\n          id: result.id\n        };\n\n        _this.appDb.User.add(newUser);\n\n        _this.router.navigate(['']);\n      } else {\n        $(\".form-control\").addClass(\"is-invalid\");\n        $('.invalidMessage').text(result.descriptionError);\n      }\n    })();\n  }\n\n  deleteErrorNotify() {\n    $(\".form-control\").removeClass(\"is-invalid\");\n  }\n\n  redirectToLoginPage() {\n    this.router.navigate(['login']);\n  }\n\n};\nRegisterUserComponent = __decorate([Component({\n  selector: 'register-user-component',\n  templateUrl: 'registerUserComponent.html',\n  providers: []\n})], RegisterUserComponent);\nexport { RegisterUserComponent };","map":{"version":3,"sources":["C:/Users/DELL/source/repos/CriptedOnlineChat/CriptedOnlineChat/ClientApp/src/app/RegisterUserComponent/registerUserComponent.ts"],"names":["__decorate","Component","RegisterUserComponent","constructor","registerUser","userService","router","appDb","registerNewUser","password","repeatPassword","$","text","addClass","result","RegisterUser","isSuccess","newUser","Login","login","id","User","add","navigate","descriptionError","deleteErrorNotify","removeClass","redirectToLoginPage","selector","templateUrl","providers"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,IAAIC,qBAAqB,GAAG,MAAMA,qBAAN,CAA4B;AACpDC,EAAAA,WAAW,CAACC,YAAD,EAAeC,WAAf,EAA4BC,MAA5B,EAAoCC,KAApC,EAA2C;AAClD,SAAKH,YAAL,GAAoBA,YAApB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH;;AACKC,EAAAA,eAAe,GAAG;AAAA;;AAAA;AACpB,UAAI,KAAI,CAACJ,YAAL,CAAkBK,QAAlB,IAA8B,KAAI,CAACL,YAAL,CAAkBM,cAApD,EAAoE;AAChEC,QAAAA,CAAC,CAAC,iBAAD,CAAD,CAAqBC,IAArB,CAA0B,mBAA1B;AACAD,QAAAA,CAAC,CAAC,eAAD,CAAD,CAAmBE,QAAnB,CAA4B,YAA5B;AACA;AACH;;AACD,UAAIC,MAAM,SAAS,KAAI,CAACT,WAAL,CAAiBU,YAAjB,CAA8B,KAAI,CAACX,YAAnC,CAAnB;;AACA,UAAIU,MAAM,CAACE,SAAX,EAAsB;AAClB,YAAIC,OAAO,GAAG;AAAEC,UAAAA,KAAK,EAAEJ,MAAM,CAACK,KAAhB;AAAuBC,UAAAA,EAAE,EAAEN,MAAM,CAACM;AAAlC,SAAd;;AACA,QAAA,KAAI,CAACb,KAAL,CAAWc,IAAX,CAAgBC,GAAhB,CAAoBL,OAApB;;AACA,QAAA,KAAI,CAACX,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACH,OAJD,MAKK;AACDZ,QAAAA,CAAC,CAAC,eAAD,CAAD,CAAmBE,QAAnB,CAA4B,YAA5B;AACAF,QAAAA,CAAC,CAAC,iBAAD,CAAD,CAAqBC,IAArB,CAA0BE,MAAM,CAACU,gBAAjC;AACH;AAfmB;AAgBvB;;AACDC,EAAAA,iBAAiB,GAAG;AAChBd,IAAAA,CAAC,CAAC,eAAD,CAAD,CAAmBe,WAAnB,CAA+B,YAA/B;AACH;;AACDC,EAAAA,mBAAmB,GAAG;AAClB,SAAKrB,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACH;;AA7BmD,CAAxD;AA+BArB,qBAAqB,GAAGF,UAAU,CAAC,CAC/BC,SAAS,CAAC;AACN2B,EAAAA,QAAQ,EAAE,yBADJ;AAENC,EAAAA,WAAW,EAAE,4BAFP;AAGNC,EAAAA,SAAS,EAAE;AAHL,CAAD,CADsB,CAAD,EAM/B5B,qBAN+B,CAAlC;AAOA,SAASA,qBAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nlet RegisterUserComponent = class RegisterUserComponent {\r\n    constructor(registerUser, userService, router, appDb) {\r\n        this.registerUser = registerUser;\r\n        this.userService = userService;\r\n        this.router = router;\r\n        this.appDb = appDb;\r\n    }\r\n    async registerNewUser() {\r\n        if (this.registerUser.password != this.registerUser.repeatPassword) {\r\n            $('.invalidMessage').text(\"Password mismatch\");\r\n            $('.form-control').addClass('is-invalid');\r\n            return;\r\n        }\r\n        var result = await this.userService.RegisterUser(this.registerUser);\r\n        if (result.isSuccess) {\r\n            let newUser = { Login: result.login, id: result.id };\r\n            this.appDb.User.add(newUser);\r\n            this.router.navigate(['']);\r\n        }\r\n        else {\r\n            $(\".form-control\").addClass(\"is-invalid\");\r\n            $('.invalidMessage').text(result.descriptionError);\r\n        }\r\n    }\r\n    deleteErrorNotify() {\r\n        $(\".form-control\").removeClass(\"is-invalid\");\r\n    }\r\n    redirectToLoginPage() {\r\n        this.router.navigate(['login']);\r\n    }\r\n};\r\nRegisterUserComponent = __decorate([\r\n    Component({\r\n        selector: 'register-user-component',\r\n        templateUrl: 'registerUserComponent.html',\r\n        providers: []\r\n    })\r\n], RegisterUserComponent);\r\nexport { RegisterUserComponent };\r\n"]},"metadata":{},"sourceType":"module"}