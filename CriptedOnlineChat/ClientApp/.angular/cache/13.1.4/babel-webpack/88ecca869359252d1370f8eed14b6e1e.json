{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\DELL\\\\source\\\\repos\\\\CriptedOnlineChat\\\\CriptedOnlineChat\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { FindUserDTO } from 'src/app/Services/user.service';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/db\";\nimport * as i2 from \"../../Services/data.service\";\nimport * as i3 from \"src/app/Services/user.service\";\nimport * as i4 from \"src/app/Services/rsa.service\";\nimport * as i5 from \"src/app/Services/contacts.service\";\nimport * as i6 from \"src/app/Services/rsa.keys.service\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/common\";\n\nfunction ContactListComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ul\", 11);\n    i0.ɵɵlistener(\"click\", function ContactListComponent_ng_template_12_Template_ul_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const contact_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.ChangeDisplayedMessages(contact_r1);\n    });\n    i0.ɵɵelementStart(1, \"li\", 12);\n    i0.ɵɵelementStart(2, \"div\", 13);\n    i0.ɵɵelement(3, \"img\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 15);\n    i0.ɵɵelementStart(5, \"span\", 16);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const contact_r1 = ctx.$implicit;\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(contact_r1.Login);\n  }\n}\n\nexport let ContactListComponent = /*#__PURE__*/(() => {\n  class ContactListComponent {\n    constructor(db, DataService, userService, rsaService, contactService, rsaKeysService) {\n      this.contactList = []; // Search variables\n\n      this.searchUserLogin = new FindUserDTO();\n      this.isSearchMode = false;\n      this.db = db;\n      this.DataService = DataService;\n      this.userService = userService;\n      this.rsaService = rsaService;\n      this.ContactService = contactService;\n      this.rsaKeysService = rsaKeysService;\n    }\n\n    ngOnInit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        yield _this.fillContactList(); // submint searsh input when pressing enter\n\n        $(document).ready(function () {\n          $('input').keydown(function (e) {\n            if (e.keyCode === 13) {\n              $('.searchLoginInfo').click();\n            }\n          });\n        });\n      })();\n    }\n\n    fillContactList() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        _this2.contactList = yield _this2.db.Contacts.toArray();\n      })();\n    }\n\n    ChangeDisplayedMessages(newDesplayedUserLogin) {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        if (_this3.isSearchMode) {\n          _this3.isSearchMode = false;\n\n          _this3.AddNewUserToLocalDb(newDesplayedUserLogin);\n\n          yield _this3.fillContactList();\n        }\n\n        _this3.DataService.currentDisplayedLogin.next(newDesplayedUserLogin.Login);\n      })();\n    }\n\n    searchUsers() {\n      var _this4 = this;\n\n      return _asyncToGenerator(function* () {\n        if (_this4.searchUserLogin.login == \"\") {\n          return;\n        }\n\n        _this4.isSearchMode = true; // Получаем пользователей по запросу\n\n        let newDispayedUsers = [];\n        let result = yield _this4.userService.FindUsers(_this4.searchUserLogin); // TODO take preloader\n\n        result.forEach(element => {\n          var newContact = {\n            Login: element.login,\n            ContactId: element.id\n          };\n          newDispayedUsers.push(newContact);\n        }); // Получаем пользователей находящихся в базе\n\n        var currentUsers = yield _this4.db.Contacts.toArray(); // Удаляем в списке пользователей, которые уже есть в контах\n\n        currentUsers.forEach(element => {\n          newDispayedUsers.forEach(element1 => {\n            if (element.Login == element1.Login) {\n              newDispayedUsers.splice(newDispayedUsers.indexOf(element1), 1);\n            }\n          });\n        });\n        $(\".users\").hide(500);\n        setTimeout(() => {\n          _this4.contactList = newDispayedUsers;\n          $(\".searchUsersDisplay\").show(500);\n        }, 500);\n      })();\n    }\n\n    AddNewUserToLocalDb(newUser) {\n      var _this5 = this;\n\n      return _asyncToGenerator(function* () {\n        var insertedUser = newUser; // gen KeyPair\n\n        var rsaKeys = yield _this5.rsaService.GenerateKeyPair();\n        var publicKeyId = uuidv4();\n        var privateKeyId = uuidv4();\n        insertedUser.PrivateKeyId = privateKeyId;\n        insertedUser.PublicKeyId = publicKeyId;\n\n        _this5.ContactService.AddNewContact(insertedUser);\n\n        _this5.rsaKeysService.AddPrivateKeyToLocalDB(rsaKeys.privateKey, privateKeyId);\n\n        _this5.rsaKeysService.AddPublicKeyToLocalDB(rsaKeys.publicKey, false, publicKeyId);\n\n        _this5.backToContactListButton();\n\n        yield _this5.rsaKeysService.SendRSAPublicKey((yield _this5.db.User.toArray().then(x => {\n          return x[0];\n        })).id, insertedUser.ContactId, rsaKeys.publicKey); // реализовать что бы 2-ой пользователь при получании ключа сразу же то же отправлял свой обратно\n      })();\n    }\n\n    backToContactListButton() {\n      var _this6 = this;\n\n      return _asyncToGenerator(function* () {\n        _this6.isSearchMode = false;\n        $(\".searchUsersDisplay\").hide(500);\n        yield _this6.fillContactList();\n        _this6.searchUserLogin.login = \"\";\n      })();\n    }\n\n  }\n\n  ContactListComponent.ɵfac = function ContactListComponent_Factory(t) {\n    return new (t || ContactListComponent)(i0.ɵɵdirectiveInject(i1.AppDB), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.RSAService), i0.ɵɵdirectiveInject(i5.ContactService), i0.ɵɵdirectiveInject(i6.RSAKeysService));\n  };\n\n  ContactListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContactListComponent,\n    selectors: [[\"contact-list-component\"]],\n    decls: 13,\n    vars: 2,\n    consts: [[1, \"users-container\"], [1, \"chat-search-box\"], [1, \"input-group\"], [\"placeholder\", \"Search\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"input-group-btn\"], [\"type\", \"button\", 1, \"searchLoginInfo\", \"btn\", \"btn-info\", 3, \"click\"], [1, \"fa\", \"fa-search\"], [1, \"searchUsersDisplay\", \"card\", \"mt-2\", 2, \"display\", \"none\"], [1, \"card-body\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-lg\", 3, \"click\"], [\"ngFor\", \"\", \"class\", \"contactList\", \"id\", \"contactList\", 3, \"ngForOf\"], [1, \"users\", 3, \"click\"], [1, \"person\"], [1, \"user\"], [\"src\", \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTaNDp4YnUOqj50lXmzwcNmA6x6tk__ZJoq7Q&usqp=CAU\"], [1, \"name-time\"], [1, \"name\"]],\n    template: function ContactListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function ContactListComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.searchUserLogin.login = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function ContactListComponent_Template_button_click_5_listener() {\n          return ctx.searchUsers();\n        });\n        i0.ɵɵelement(6, \"i\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 7);\n        i0.ɵɵelementStart(8, \"div\", 8);\n        i0.ɵɵtext(9, \" Searching new users \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function ContactListComponent_Template_button_click_10_listener() {\n          return ctx.backToContactListButton();\n        });\n        i0.ɵɵtext(11, \"Back to Contact list\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, ContactListComponent_ng_template_12_Template, 7, 1, \"ng-template\", 10);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.searchUserLogin.login);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.contactList);\n      }\n    },\n    directives: [i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgModel, i8.NgForOf],\n    styles: [\"body[_ngcontent-%COMP%]{margin-top:20px}.chat-search-box[_ngcontent-%COMP%]{border-radius:3px 0 0;padding:.75rem 1rem}.chat-search-box[_ngcontent-%COMP%]   .input-group[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]{border-radius:2px 0 0 2px;border-right:0}.chat-search-box[_ngcontent-%COMP%]   .input-group[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]:focus{border-right:0}.chat-search-box[_ngcontent-%COMP%]   .input-group[_ngcontent-%COMP%]   .input-group-btn[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{border-radius:0 2px 2px 0;margin:0}.chat-search-box[_ngcontent-%COMP%]   .input-group[_ngcontent-%COMP%]   .input-group-btn[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:1.2rem;line-height:100%;vertical-align:middle}@media (max-width: 767px){.chat-search-box[_ngcontent-%COMP%]{display:none}}.users-container[_ngcontent-%COMP%]{position:relative;padding:1rem 0;border-right:1px solid #e6ecf3;height:100%;display:flex;flex-direction:column}.users[_ngcontent-%COMP%]{padding:0}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]{position:relative;width:100%;padding:10px 1rem;cursor:pointer;border-bottom:1px solid #f0f4f8}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]:hover{background-color:#fff;background-image:-o-linear-gradient(right,#e9eff5,#ffffff)}.users[_ngcontent-%COMP%]   .person.active-user[_ngcontent-%COMP%]{background-color:#fff;background-image:-o-linear-gradient(right,#f7f9fb,#ffffff)}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]:last-child{border-bottom:0}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   .user[_ngcontent-%COMP%]{display:inline-block;position:relative;margin-right:10px}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   .user[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:48px;height:48px;border-radius:50px}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   .user[_ngcontent-%COMP%]   .status[_ngcontent-%COMP%]{width:10px;height:10px;border-radius:100px;background:#e6ecf3;position:absolute;top:0;right:0}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   .user[_ngcontent-%COMP%]   .status.online[_ngcontent-%COMP%]{background:#9ec94a}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   .user[_ngcontent-%COMP%]   .status.offline[_ngcontent-%COMP%]{background:#c4d2e2}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   .user[_ngcontent-%COMP%]   .status.away[_ngcontent-%COMP%]{background:#f9be52}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   .user[_ngcontent-%COMP%]   .status.busy[_ngcontent-%COMP%]{background:#fd7274}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   p.name-time[_ngcontent-%COMP%]{font-weight:600;font-size:.85rem;display:inline-block}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   p.name-time[_ngcontent-%COMP%]   .time[_ngcontent-%COMP%]{font-weight:400;font-size:.7rem;text-align:right;color:#8796af}@media (max-width: 767px){.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   .user[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:30px;height:30px}.users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   p.name-time[_ngcontent-%COMP%], .users[_ngcontent-%COMP%]   .person[_ngcontent-%COMP%]   p.name-time[_ngcontent-%COMP%]   .time[_ngcontent-%COMP%]{display:none}}\"]\n  });\n  return ContactListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}