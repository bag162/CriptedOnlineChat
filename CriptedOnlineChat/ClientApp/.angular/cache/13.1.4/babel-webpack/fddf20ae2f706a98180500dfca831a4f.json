{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\DELL\\\\source\\\\repos\\\\CriptedOnlineChat\\\\CriptedOnlineChat\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { HubConnectionBuilder } from '@microsoft/signalr';\nimport * as i0 from \"@angular/core\";\nexport class WebSocketService {\n  constructor(baseUrl) {\n    this.baseUrl = baseUrl + \"schatHub\";\n    this.HubConnection = new HubConnectionBuilder().withUrl(\"http://localhost:5172/schatHub\", {}).build();\n    this.initWebSocket(); //TODO to ngOnInit\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.HubConnection.start();\n\n      _this.HubConnection.on(\"Test\", message => {\n        console.log(message);\n      });\n    })();\n  }\n\n}\n\nWebSocketService.ɵfac = function WebSocketService_Factory(t) {\n  return new (t || WebSocketService)(i0.ɵɵinject('BASE_URL'));\n};\n\nWebSocketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WebSocketService,\n  factory: WebSocketService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/DELL/source/repos/CriptedOnlineChat/CriptedOnlineChat/ClientApp/src/app/WebSocket.service.ts"],"names":["HubConnectionBuilder","i0","WebSocketService","constructor","baseUrl","HubConnection","withUrl","build","initWebSocket","ngOnInit","start","on","message","console","log","ɵfac","WebSocketService_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,oBAAT,QAAqC,oBAArC;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,MAAMC,gBAAN,CAAuB;AAC1BC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,SAAKA,OAAL,GAAeA,OAAO,GAAG,UAAzB;AACA,SAAKC,aAAL,GAAqB,IAAIL,oBAAJ,GAChBM,OADgB,CACR,gCADQ,EAC0B,EAD1B,EAEhBC,KAFgB,EAArB;AAGA,SAAKC,aAAL,GALiB,CAKK;AACzB;;AACKC,EAAAA,QAAQ,GAAG;AAAA;;AAAA;AACb,MAAA,KAAI,CAACJ,aAAL,CAAmBK,KAAnB;;AACA,MAAA,KAAI,CAACL,aAAL,CAAmBM,EAAnB,CAAsB,MAAtB,EAA8BC,OAAO,IAAI;AAAEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAAuB,OAAlE;AAFa;AAGhB;;AAXyB;;AAa9BV,gBAAgB,CAACa,IAAjB,GAAwB,SAASC,wBAAT,CAAkCC,CAAlC,EAAqC;AAAE,SAAO,KAAKA,CAAC,IAAIf,gBAAV,EAA4BD,EAAE,CAACiB,QAAH,CAAY,UAAZ,CAA5B,CAAP;AAA8D,CAA7H;;AACAhB,gBAAgB,CAACiB,KAAjB,GAAyB,aAAclB,EAAE,CAACmB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEnB,gBAAT;AAA2BoB,EAAAA,OAAO,EAAEpB,gBAAgB,CAACa,IAArD;AAA2DQ,EAAAA,UAAU,EAAE;AAAvE,CAAtB,CAAvC","sourcesContent":["import { HubConnectionBuilder } from '@microsoft/signalr';\r\nimport * as i0 from \"@angular/core\";\r\nexport class WebSocketService {\r\n    constructor(baseUrl) {\r\n        this.baseUrl = baseUrl + \"schatHub\";\r\n        this.HubConnection = new HubConnectionBuilder()\r\n            .withUrl(\"http://localhost:5172/schatHub\", {})\r\n            .build();\r\n        this.initWebSocket(); //TODO to ngOnInit\r\n    }\r\n    async ngOnInit() {\r\n        this.HubConnection.start();\r\n        this.HubConnection.on(\"Test\", message => { console.log(message); });\r\n    }\r\n}\r\nWebSocketService.ɵfac = function WebSocketService_Factory(t) { return new (t || WebSocketService)(i0.ɵɵinject('BASE_URL')); };\r\nWebSocketService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: WebSocketService, factory: WebSocketService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}