{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\DELL\\\\source\\\\repos\\\\CriptedOnlineChat\\\\CriptedOnlineChat\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthorizeGuardService {\n  constructor(httpclient, baseUrl) {\n    this.httpClient = httpclient;\n    this.baseUrl = baseUrl + \"user/IsAuthenticated\";\n  }\n\n  IsAuthorized() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this.httpClient.get(_this.baseUrl).then(response => {\n        var _a;\n\n        console.log(response.content);\n\n        if (((_a = response.content) === null || _a === void 0 ? void 0 : _a.toString()) == \"true\") {\n          return true;\n        } else {\n          return false;\n        }\n      });\n    })();\n  }\n\n}\n\nAuthorizeGuardService.ɵfac = function AuthorizeGuardService_Factory(t) {\n  return new (t || AuthorizeGuardService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\n\nAuthorizeGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthorizeGuardService,\n  factory: AuthorizeGuardService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/DELL/source/repos/CriptedOnlineChat/CriptedOnlineChat/ClientApp/src/app/Services/authorizeGuard.service.ts"],"names":["i0","i1","AuthorizeGuardService","constructor","httpclient","baseUrl","httpClient","IsAuthorized","get","then","response","_a","console","log","content","toString","ɵfac","AuthorizeGuardService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,qBAAN,CAA4B;AAC/BC,EAAAA,WAAW,CAACC,UAAD,EAAaC,OAAb,EAAsB;AAC7B,SAAKC,UAAL,GAAkBF,UAAlB;AACA,SAAKC,OAAL,GAAeA,OAAO,GAAG,sBAAzB;AACH;;AACKE,EAAAA,YAAY,GAAG;AAAA;;AAAA;AACjB,mBAAa,KAAI,CAACD,UAAL,CAAgBE,GAAhB,CAAoB,KAAI,CAACH,OAAzB,EAAkCI,IAAlC,CAAuCC,QAAQ,IAAI;AAC5D,YAAIC,EAAJ;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,OAArB;;AACA,YAAI,CAAC,CAACH,EAAE,GAAGD,QAAQ,CAACI,OAAf,MAA4B,IAA5B,IAAoCH,EAAE,KAAK,KAAK,CAAhD,GAAoD,KAAK,CAAzD,GAA6DA,EAAE,CAACI,QAAH,EAA9D,KAAgF,MAApF,EAA4F;AACxF,iBAAO,IAAP;AACH,SAFD,MAGK;AACD,iBAAO,KAAP;AACH;AACJ,OATY,CAAb;AADiB;AAWpB;;AAhB8B;;AAkBnCb,qBAAqB,CAACc,IAAtB,GAA6B,SAASC,6BAAT,CAAuCC,CAAvC,EAA0C;AAAE,SAAO,KAAKA,CAAC,IAAIhB,qBAAV,EAAiCF,EAAE,CAACmB,QAAH,CAAYlB,EAAE,CAACmB,UAAf,CAAjC,EAA6DpB,EAAE,CAACmB,QAAH,CAAY,UAAZ,CAA7D,CAAP;AAA+F,CAAxK;;AACAjB,qBAAqB,CAACmB,KAAtB,GAA8B,aAAcrB,EAAE,CAACsB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAErB,qBAAT;AAAgCsB,EAAAA,OAAO,EAAEtB,qBAAqB,CAACc,IAA/D;AAAqES,EAAAA,UAAU,EAAE;AAAjF,CAAtB,CAA5C","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class AuthorizeGuardService {\r\n    constructor(httpclient, baseUrl) {\r\n        this.httpClient = httpclient;\r\n        this.baseUrl = baseUrl + \"user/IsAuthenticated\";\r\n    }\r\n    async IsAuthorized() {\r\n        return await this.httpClient.get(this.baseUrl).then(response => {\r\n            var _a;\r\n            console.log(response.content);\r\n            if (((_a = response.content) === null || _a === void 0 ? void 0 : _a.toString()) == \"true\") {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n}\r\nAuthorizeGuardService.ɵfac = function AuthorizeGuardService_Factory(t) { return new (t || AuthorizeGuardService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL')); };\r\nAuthorizeGuardService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthorizeGuardService, factory: AuthorizeGuardService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}